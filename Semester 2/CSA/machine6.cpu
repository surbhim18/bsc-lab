<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="machine6.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="I" type="required" numBits="1" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field32d5a2">
	</Field>
	<Field name="unused" type="ignored" numBits="13" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field15a2c3a">
	</Field>
	<Field name="opcode" type="required" numBits="3" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field5cf18c">
	</Field>
	<Field name="address" type="required" numBits="12" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field13ba2dd">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" id="module.Register132eedd" />
	<Register name="AR" width="12" id="module.Register11b2dbd" />
	<Register name="CTR" width="16" id="module.Register1f2530a" />
	<Register name="DR" width="16" id="module.Registerd66a43" />
	<Register name="E" width="1" id="module.Register95088e" />
	<Register name="I" width="1" id="module.Register6342c7" />
	<Register name="IR" width="16" id="module.Registerfbef73" />
	<Register name="PC" width="12" id="module.Register1e61a5d" />
	<Register name="STATUS" width="1" id="module.Register1dba397" />
	<Register name="Temp" width="1" id="module.Register142a191" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="carry" bit="0" register="module.Register95088e" halt="false" id="module.ConditionBit546bd" />
	<ConditionBit name="halt bit" bit="0" register="module.Register1dba397" halt="true" id="module.ConditionBit18088d2" />

	<!--............. rams ..........................-->
	<RAM name="Memory" length="4096" id="module.RAM1f74aae" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="module.Register132eedd" start="0" numBits="16" value="0" id="microinstruction.CpusimSet4468ba" />
	<Set name="AR&lt;-0" register="module.Register11b2dbd" start="0" numBits="12" value="0" id="microinstruction.CpusimSet11bf9a6" />
	<Set name="E&lt;-0" register="module.Register95088e" start="0" numBits="1" value="0" id="microinstruction.CpusimSet1a38808" />

	<!--............. test ..........................-->
	<Test name="if(AC&lt;0)" register="module.Register132eedd" start="0" numBits="16" comparison="GE" value="0" omission="1" id="microinstruction.Test1eca5b3" />
	<Test name="if(AC==0)" register="module.Register132eedd" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test821b8c" />
	<Test name="if(AC&gt;0)" register="module.Register132eedd" start="0" numBits="16" comparison="LE" value="0" omission="1" id="microinstruction.Test3a0e33" />
	<Test name="if(AR(0)==1)" register="module.Register11b2dbd" start="0" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Test1ce22f4" />
	<Test name="if(AR(1)==1)" register="module.Register11b2dbd" start="1" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Test153db83" />
	<Test name="if(AR(10)==1)" register="module.Register11b2dbd" start="10" numBits="1" comparison="NE" value="1" omission="3" id="microinstruction.Test14bf01e" />
	<Test name="if(AR(11)==1)" register="module.Register11b2dbd" start="11" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Test1e82b12" />
	<Test name="if(AR(2)==1)" register="module.Register11b2dbd" start="2" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Test16f6bd9" />
	<Test name="if(AR(3)==1)" register="module.Register11b2dbd" start="3" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Testd37f4" />
	<Test name="if(AR(4)==1)" register="module.Register11b2dbd" start="4" numBits="1" comparison="NE" value="1" omission="5" id="microinstruction.Testacf12b" />
	<Test name="if(AR(5)==1)" register="module.Register11b2dbd" start="5" numBits="1" comparison="NE" value="1" omission="5" id="microinstruction.Test80fa17" />
	<Test name="if(AR(6)==1)" register="module.Register11b2dbd" start="6" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Test497b7d" />
	<Test name="if(AR(7)==1)" register="module.Register11b2dbd" start="7" numBits="1" comparison="NE" value="1" omission="3" id="microinstruction.Test1fc5217" />
	<Test name="if(AR(8)==1)" register="module.Register11b2dbd" start="8" numBits="1" comparison="NE" value="1" omission="3" id="microinstruction.Test175c0a8" />
	<Test name="if(AR(9)==1)" register="module.Register11b2dbd" start="9" numBits="1" comparison="NE" value="1" omission="3" id="microinstruction.Testccd228" />
	<Test name="if(CTR==0)" register="module.Register1f2530a" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test135e0b3" />
	<Test name="if(DR==0)" register="module.Registerd66a43" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test12542cc" />
	<Test name="if(E==0)" register="module.Register95088e" start="0" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test1deef80" />
	<Test name="if(I == 0)" register="module.Register6342c7" start="0" numBits="1" comparison="NE" value="0" omission="46" id="microinstruction.Test9b0353" />
	<Test name="if(I == 1)" register="module.Register6342c7" start="0" numBits="1" comparison="NE" value="1" omission="2" id="microinstruction.Test10d6ba" />

	<!--............. increment .....................-->
	<Increment name="AC &lt;- AC +1" register="module.Register132eedd" delta="1" id="microinstruction.Increment13cc7d6" />
	<Increment name="AR&lt;-AR+1" register="module.Register11b2dbd" delta="2" id="microinstruction.Increment18e89de" />
	<Increment name="CTR &lt;- CTR +1" register="module.Register1f2530a" delta="1" id="microinstruction.Increment1af126e" />
	<Increment name="DR&lt;-DR+1" register="module.Registerd66a43" delta="1" id="microinstruction.Increment1059267" />
	<Increment name="PC&lt;-PC+1" register="module.Register1e61a5d" delta="2" id="microinstruction.Increment12231fb" />

	<!--............. shift .........................-->
	<Shift name="AC &lt;- shlAC" type="logical" source="module.Register132eedd" destination="module.Register132eedd" direction="left" distance="1" id="microinstruction.Shiftd9dea3" />
	<Shift name="AC &lt;- shrAC" type="logical" source="module.Register132eedd" destination="module.Register132eedd" direction="right" distance="1" id="microinstruction.Shifte69f2a" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;- AC AND DR" type="AND" source1="module.Register132eedd" source2="module.Registerd66a43" destination="module.Register132eedd" id="microinstruction.Logicala63a75" />
	<Logical name="AC&lt;- AC OR DR" type="OR" source1="module.Register132eedd" source2="module.Registerd66a43" destination="module.Register132eedd" id="microinstruction.Logical33f144" />
	<Logical name="AC&lt;-AC'" type="NOT" source1="module.Register132eedd" source2="module.Register132eedd" destination="module.Register132eedd" id="microinstruction.Logicale6469e" />
	<Logical name="E&lt;-E'" type="NOT" source1="module.Register95088e" source2="module.Register95088e" destination="module.Register95088e" id="microinstruction.Logical48aca0" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC &lt;- AC/DR" type="DIVIDE" source1="module.Registerd66a43" source2="module.Register132eedd" destination="module.Register132eedd" id="microinstruction.Arithmetic1d2458e" />
	<Arithmetic name="AC&lt;- AC + DR" type="ADD" source1="module.Registerd66a43" source2="module.Register132eedd" destination="module.Register132eedd" carryBit="module.ConditionBit546bd" id="microinstruction.Arithmetica03e21" />
	<Arithmetic name="AC&lt;-AC*DR" type="MULTIPLY" source1="module.Registerd66a43" source2="module.Register132eedd" destination="module.Register132eedd" id="microinstruction.Arithmetic4c505d" />
	<Arithmetic name="AC&lt;-AC-DR" type="SUBTRACT" source1="module.Registerd66a43" source2="module.Register132eedd" destination="module.Register132eedd" id="microinstruction.Arithmetic152dcd8" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;- Temp" source="module.Register142a191" srcStartBit="0" dest="module.Register132eedd" destStartBit="0" numBits="1" id="microinstruction.TransferRtoRa71c89" />
	<TransferRtoR name="AC(15) &lt;- Temp" source="module.Register142a191" srcStartBit="0" dest="module.Register132eedd" destStartBit="15" numBits="1" id="microinstruction.TransferRtoR1a5710a" />
	<TransferRtoR name="AC&lt;-DR" source="module.Registerd66a43" srcStartBit="0" dest="module.Register132eedd" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR165071b" />
	<TransferRtoR name="AR &lt;- DR" source="module.Registerd66a43" srcStartBit="4" dest="module.Register11b2dbd" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR18aef3" />
	<TransferRtoR name="AR&lt;-IR(3-14)" source="module.Registerfbef73" srcStartBit="3" dest="module.Register11b2dbd" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR37a12d" />
	<TransferRtoR name="AR&lt;-PC" source="module.Register1e61a5d" srcStartBit="0" dest="module.Register11b2dbd" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR36b880" />
	<TransferRtoR name="DR&lt;-AC" source="module.Register132eedd" srcStartBit="0" dest="module.Registerd66a43" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR14a2a42" />
	<TransferRtoR name="DR&lt;-PC" source="module.Register1e61a5d" srcStartBit="0" dest="module.Registerd66a43" destStartBit="4" numBits="12" id="microinstruction.TransferRtoR2067ae" />
	<TransferRtoR name="E &lt;- AC(0)" source="module.Register132eedd" srcStartBit="0" dest="module.Register95088e" destStartBit="0" numBits="1" id="microinstruction.TransferRtoRc8d857" />
	<TransferRtoR name="E&lt;-AC(15)" source="module.Register132eedd" srcStartBit="15" dest="module.Register95088e" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR20ea36" />
	<TransferRtoR name="I &lt;- IR(15)" source="module.Registerfbef73" srcStartBit="15" dest="module.Register6342c7" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR19aee8b" />
	<TransferRtoR name="IR&lt;-DR" source="module.Registerd66a43" srcStartBit="0" dest="module.Registerfbef73" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR7a2942" />
	<TransferRtoR name="PC&lt;-AR" source="module.Register11b2dbd" srcStartBit="0" dest="module.Register1e61a5d" destStartBit="0" numBits="12" id="microinstruction.TransferRtoRb640ba" />
	<TransferRtoR name="PC&lt;-IR(3-14)" source="module.Registerfbef73" srcStartBit="3" dest="module.Register1e61a5d" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR1b070c0" />
	<TransferRtoR name="Temp&lt;-E" source="module.Register95088e" srcStartBit="0" dest="module.Register142a191" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR15e3d0b" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE" ir="module.Registerfbef73" id="microinstruction.Decodea1219b" />

	<!--............. set condition bit .............-->
	<SetCondBit name="set-halt-bit" bit="module.ConditionBit18088d2" value="1" id="microinstruction.SetCondBit780ea5" />

	<!--............. io ............................-->
	<IO name="(int) &lt;- Output-AC" direction="output" type="integer" buffer="module.Register132eedd" connection="[console]" id="microinstruction.IO62495a" />
	<IO name="AC&lt;-Input (int)" direction="input" type="integer" buffer="module.Register132eedd" connection="[console]" id="microinstruction.IO8a9ef8" />

	<!--............. memory access .................-->
	<MemoryAccess name="CTR&lt;- M[AR]" direction="read" memory="module.RAM1f74aae" data="module.Register1f2530a" address="module.Register11b2dbd" id="microinstruction.MemoryAccess179d3d6" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="module.RAM1f74aae" data="module.Registerd66a43" address="module.Register11b2dbd" id="microinstruction.MemoryAccess14ec58b" />
	<MemoryAccess name="M[AR]&lt;-CTR" direction="write" memory="module.RAM1f74aae" data="module.Register1f2530a" address="module.Register11b2dbd" id="microinstruction.MemoryAccess4ef25" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="module.RAM1f74aae" data="module.Registerd66a43" address="module.Register11b2dbd" id="microinstruction.MemoryAccess189ec21" />

	<!--............. end ...........................-->
	<End id="microinstruction.End1954693" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoR36b880" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR7a2942" />
		<Microinstruction microRef="microinstruction.Increment12231fb" />
		<Microinstruction microRef="microinstruction.TransferRtoR37a12d" />
		<Microinstruction microRef="microinstruction.TransferRtoR19aee8b" />
		<Microinstruction microRef="microinstruction.Decodea1219b" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="RR" opcode="7" format="opcode address I" >
		<Microinstruction microRef="microinstruction.Test9b0353" />
		<Microinstruction microRef="microinstruction.Test1ce22f4" />
		<Microinstruction microRef="microinstruction.CpusimSet4468ba" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test153db83" />
		<Microinstruction microRef="microinstruction.CpusimSet1a38808" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test16f6bd9" />
		<Microinstruction microRef="microinstruction.Logicale6469e" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Testd37f4" />
		<Microinstruction microRef="microinstruction.Logical48aca0" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Testacf12b" />
		<Microinstruction microRef="microinstruction.TransferRtoR15e3d0b" />
		<Microinstruction microRef="microinstruction.TransferRtoR20ea36" />
		<Microinstruction microRef="microinstruction.Shifte69f2a" />
		<Microinstruction microRef="microinstruction.TransferRtoRa71c89" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test80fa17" />
		<Microinstruction microRef="microinstruction.TransferRtoR15e3d0b" />
		<Microinstruction microRef="microinstruction.TransferRtoRc8d857" />
		<Microinstruction microRef="microinstruction.Shiftd9dea3" />
		<Microinstruction microRef="microinstruction.TransferRtoR1a5710a" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test497b7d" />
		<Microinstruction microRef="microinstruction.Increment13cc7d6" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test1fc5217" />
		<Microinstruction microRef="microinstruction.Test3a0e33" />
		<Microinstruction microRef="microinstruction.Increment12231fb" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test175c0a8" />
		<Microinstruction microRef="microinstruction.Test1eca5b3" />
		<Microinstruction microRef="microinstruction.Increment12231fb" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Testccd228" />
		<Microinstruction microRef="microinstruction.Test821b8c" />
		<Microinstruction microRef="microinstruction.Increment12231fb" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test14bf01e" />
		<Microinstruction microRef="microinstruction.Test1deef80" />
		<Microinstruction microRef="microinstruction.Increment12231fb" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test1e82b12" />
		<Microinstruction microRef="microinstruction.SetCondBit780ea5" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test1ce22f4" />
		<Microinstruction microRef="microinstruction.IO8a9ef8" />
		<Microinstruction microRef="microinstruction.End1954693" />
		<Microinstruction microRef="microinstruction.Test153db83" />
		<Microinstruction microRef="microinstruction.IO62495a" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="ICSZ" opcode="6" format="opcode address I" >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.MemoryAccess179d3d6" />
		<Microinstruction microRef="microinstruction.Increment1af126e" />
		<Microinstruction microRef="microinstruction.MemoryAccess4ef25" />
		<Microinstruction microRef="microinstruction.Test135e0b3" />
		<Microinstruction microRef="microinstruction.Increment12231fb" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" format="opcode address I" >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.CpusimSet11bf9a6" />
		<Microinstruction microRef="microinstruction.TransferRtoR2067ae" />
		<Microinstruction microRef="microinstruction.MemoryAccess189ec21" />
		<Microinstruction microRef="microinstruction.TransferRtoR37a12d" />
		<Microinstruction microRef="microinstruction.TransferRtoRb640ba" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" format="opcode address I" >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.TransferRtoRb640ba" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" format="opcode unused " >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.TransferRtoR14a2a42" />
		<Microinstruction microRef="microinstruction.MemoryAccess189ec21" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" format="opcode unused" >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR165071b" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="1" format="opcode address I" >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.Logicala63a75" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="0" format="opcode address I" >
		<Microinstruction microRef="microinstruction.Test10d6ba" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.TransferRtoR18aef3" />
		<Microinstruction microRef="microinstruction.MemoryAccess14ec58b" />
		<Microinstruction microRef="microinstruction.Arithmetica03e21" />
		<Microinstruction microRef="microinstruction.End1954693" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM1f74aae" startingAddress="36" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
		<RAMWindowInfo ram="module.RAM1f74aae" cellSize="2" contentsbase="Hexadecimal" addressbase="Hexadecimal" 
			top="231" left="592" width="646" height="433" />
		<RegisterWindowInfo base="Hexadecimal" 
			top="0" left="859" width="343" height="219" />
	</ModuleWindowsInfo>

</Machine>
